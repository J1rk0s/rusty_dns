#[cfg(test)]
mod tests {
    use rusty_dns::{models::packets::DnsPacket, DnsHandler};

    #[test]
    fn test_parsing(){
        let data: [u8; 33] = [0xca, 0x38, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x77, 0x77, 0x77, 0x7, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x3, 0x63, 0x6f, 0x6d, 0x0, 0x0, 0x1, 0x0, 0x1];
        let packet = DnsPacket::parse(&data);

        assert_eq!(packet.header.id, 51768);
        assert_eq!(packet.header.flags, 256);
        assert_eq!(packet.header.qdcount, 1);
        assert_eq!(packet.header.ancount, 0);
        assert_eq!(packet.header.nscount, 0);
        assert_eq!(packet.header.arcount, 0);

        assert_eq!(packet.question.qname, "www.youtube.com");
        assert_eq!(packet.question.qclass, 1);
        assert_eq!(packet.question.qtype, 1);
    }

    #[test]
    fn test_to_bytes(){
        let req: [u8;28] = [0x2f, 0x89, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3, 0x63, 0x6f, 0x6d, 0x0, 0x0, 0x1, 0x0, 0x1];
        let _res: [u8; 54] = [0x2f, 0x89, 0x81, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x6, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3, 0x63, 0x6f, 0x6d, 0x0, 0x0, 0x1, 0x0, 0x1, 0x6, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3, 0x63, 0x6f, 0x6d, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x0, 0x4, 0xc0, 0xa8, 0x1, 0x32];

        let packet = DnsPacket::parse(&req);
        let _ans = DnsHandler::handle_packet(&packet);

        

        todo!("Complete this test")
    }
}